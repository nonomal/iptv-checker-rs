(function(){"use strict";self.onmessage=async function(u){const{index:e,nowMod:n,task:t,original:l}=u.data;console.log("Worker received task:",{index:e,nowMod:n,task:t,original:l});let i=null;n===0?i=await s(e,t,l.original):n===1&&(i=await c(e,t,l.original)),console.log("Worker completed task:",{index:e,result:i}),self.postMessage({index:e,task:t,result:i})};async function s(u,e,n){try{console.log(`Checking URL: ${e.url}`);let t=!1;if((n.no_check||n.not_http_skip&&!e.url.startsWith("http://")&&!e.url.startsWith("https://"))&&(t=!0),t)return{status:200,audio:null,video:null,error:""};const l=new AbortController,i=setTimeout(()=>l.abort(),n.http_timeout),r=await fetch(e.url,{method:"HEAD",signal:l.signal});if(!r.ok||r.bodyUsed)return console.log(`Request failed for ${e.url}:`,{ok:r.ok,bodyUsed:r.bodyUsed}),clearTimeout(i),l.abort(),{status:500,audio:null,video:null};clearTimeout(i);const o=r.headers.get("content-type");return console.log(`Content-Type for ${e.url}:`,o),!o||!(o.includes("application/vnd.apple.mpegurl")||o.includes("application/x-mpegurl")||o.includes("audio/mpegurl")||o.includes("audio/x-mpegurl")||o.includes("text/plain")||o.includes("application/x-mpegURL")||o.includes("application/vnd.apple.mpegURL"))?{status:500,audio:null,video:null,contentType:o}:{status:200,audio:null,video:null,contentType:o}}catch(t){return console.log(`Error checking ${e.url}:`,t),{status:500,audio:null,video:null,contentType:""}}}async function c(u,e,n){return console.log("Checking by CMD:",{index:u,task:e}),s(u,e,n)}})();
